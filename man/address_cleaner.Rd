% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/address_cleaner.R
\name{address_cleaner}
\alias{address_cleaner}
\title{A general address cleaner.}
\usage{
address_cleaner(address, verbose = TRUE)
}
\arguments{
\item{address}{A raw 1xN vector of UTF-8 encoded addresses.
Note: these addresses should be in raw form, \emph{not} URL encoded (e.g., of the form: 123 Main Street, Somewhere, NY 12345 USA)(country is optional but recommended).}

\item{verbose}{Displays additional progress output}
}
\value{
address_cleaner returns a character vector of addresses of the same length as the input.
}
\description{
Performs character transformations on a vector of
addresses in order to build "web-safe" URLs for the Google API.
}
\details{
This function strips character values from a vector of addresses (e.g., a vector of the form: address, city, state, postal code, country)
that may inhibit sucessful geocoding with the \href{https://developers.google.com/maps/documentation/geocoding/start}{Google maps API}.
Specifically, address_cleaner:
\itemize{
  \item {Replaces non-breaking spaces with " "}
  \item {Removes ASCII control characters (001-031 and 177)}
  \item {Trims runs of spaces and spaces which begin/end a string}
  \item {Converts special addressing characters, such as ordinals}
  \item {Removes single/double quotes and asterisks}
  \item {Strips latin1 characters}
  \item {Removes leading, trailing, and repeated commas}
  \item {Removes various permutations of the "c/o" flag}
  }

Note: We recommend reviewing the output of this function against the original vector to ensure the
  transformations it performs resolve the formatting issues (if any) found in your source data.
}
\examples{
# Define an incompatible vector of addresses
address <- c(" 1600 Pennsylvania Ave NW ½, Washington, DC 20500, USA ",
			 "  ª1600  Amphitheatre Pkwy,  Mountain View, CA 94043, USA")

# View the return:
address_cleaner(address)
}

